---

- name: Perform autofs media mount tasks
  when:
    - radarr_toggles_enable_nfs_autofs
    - radarr_autofs_mount_is_enabled
  block:
    - name: Install autofs
      when: ansible_os_family == 'Debian'
      ansible.builtin.apt:
        name: autofs

    - name: Install autofs
      when: ansible_os_family == 'RedHat'
      ansible.builtin.dnf:
        name: autofs

    - name: Make sure autofs service is running
      ansible.builtin.service:
        name: autofs
        state: started

    - name: Append desired local mount path to autofs auto.master file
      ansible.builtin.lineinfile:
        dest: '{{ radarr_autofs_auto_mast_file }}'
        line: '{{ radarr_autofs_nfs_local_path }} {{ radarr_autofs_nfsdb_file }} --timeout=0 --browse'
        state: present
        create: true
        owner: '{{ radarr_nfs_env_puid }}'
        group: '{{ radarr_nfs_env_pgid }}'
        mode: '0644'
      notify:
        - redo mounts

    - name: Add mount to auto.nfsdb file
      ansible.builtin.lineinfile:
        dest: '{{ radarr_autofs_nfsdb_file }}'
        line: '{{ radarr_autofs_mount_local_dir_name }} {{ radarr_autofs_mount_opt }} {{ radarr_autofs_mount_host_address }}:{{ radarr_autofs_mount_remote_path }}'
        state: present
        create: true
        owner: '{{ radarr_nfs_env_puid }}'
        group: '{{ radarr_nfs_env_pgid }}'
        mode: '0644'
      notify:
        - redo mounts

- name: Create radarr nfs media volume
  when: 
    - radarr_toggles_enable_nfs_volume
    - radarr_nfs_volume_is_enabled
  block:
    - name: Create radarr nfs volume
      community.docker.docker_volume:
        volume_name: '{{ radarr_nfs_volume_name }}'
        state: present
        recreate: options-changed
        driver: local
        driver_options:
          type: nfs
          o: 'addr={{ radarr_nfs_volume_address }},{{ radarr_nfs_volume_permissions }},nfsvers={{ radarr_nfs_volume_version }}'
          device: '{{ radarr_nfs_volume_device }}'
